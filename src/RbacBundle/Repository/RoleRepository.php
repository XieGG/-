<?php

namespace RbacBundle\Repository;

/**
 * RoleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RoleRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function getList($status = false, $page = false, $pagesize = false)
    {
        $query = $this->getEntityManager()->createQuery();
        if($status !== false){
            $query->setDQL('SELECT r FROM RbacBundle:Role r WHERE r.status = :status ORDER BY r.id DESC')->setParameter('status', $status);
        }else{
            $query->setDQL('SELECT r FROM RbacBundle:Role r ORDER BY r.id DESC');
        }
        
        if(false !== $page && false !== $pagesize){
            $offset = ($page - 1) * $pagesize;
            $query->setMaxResults($pagesize)->setFirstResult($offset);
        }
        return $query->getResult();
    }
    
    public function getApproveList($type=''){
        $qb = $this->createQueryBuilder('r')
        ->where('r.status = 1');
        if($type == "notice"){
            
        }else{
            $qb->andWhere('r.id > 1 and r.id <6');
        }
        return $qb->getQuery()
        ->getArrayResult();
    }
    
    public function getPageQuery()
    {
        return $this->createQueryBuilder('r')
            ->getQuery()
            ->getArrayResult();
    }
    public function getPersonnel($RoleId)
    {
        return $this->createQueryBuilder('r')
            ->select('r.id')
            ->join('RbacBundle:Role','r2','WITH','r2.id = :id')
            ->where('r.level < r2.level')
            ->setParameter('id',$RoleId)
            ->getQuery()
            ->getArrayResult();
    }

    public function  getRoleQuery($id)
    {
        $role =  $this->createQueryBuilder('r')
            ->where('r.id = :id')
            ->setParameter('id',$id)
            ->getQuery()
            ->getArrayResult();
        return $role[0];
    }

}
